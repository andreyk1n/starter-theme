// === –Ü–ú–ü–û–†–¢ –ü–õ–ê–ì–Ü–ù–Ü–í ===
const gulp = require('gulp');
const fileInclude = require('gulp-file-include');
const sass = require('gulp-sass')(require('sass'));
const cleanCSS = require('gulp-clean-css');
const rename = require('gulp-rename');
const browserSync = require('browser-sync').create();
const uglify = require('gulp-uglify');
const plumber = require('gulp-plumber');

// === –®–õ–Ø–•–ò –î–û –§–ê–ô–õ–Ü–í ===
const paths = {
  html: {
    src: 'src/pages/*.html',
    dest: 'dist/'
  },
  styles: {
    src: 'src/scss/**/*.scss',
    dest: 'dist/css/'
  },
  scripts: {
    app: 'src/js/app.js',
    appDest: 'dist/js/',
    functions: 'src/js/functions/**/*.js',
    functionsDest: 'dist/js/functions/'
  }
};

// === –û–ë–†–û–ë–ö–ê HTML –ó FILE INCLUDE ===
function html() {
  console.log('\x1b[36m%s\x1b[0m', 'üìÑ HTML –æ–±—Ä–æ–±–ª—è—î—Ç—å—Å—è...');
  return gulp.src(paths.html.src)
    .pipe(fileInclude({
      prefix: '@@',
      basepath: 'src/partials/'
    }))
    .pipe(gulp.dest(paths.html.dest))
    .pipe(browserSync.stream());
}

// === –û–ë–†–û–ë–ö–ê SCSS –£ –°–¢–ò–õ–Ü ===
function styles() {
  console.log('\x1b[35m%s\x1b[0m', 'üé® SCSS –∫–æ–º–ø—ñ–ª—é—î—Ç—å—Å—è...');
  return gulp.src(paths.styles.src)
    .pipe(sass().on('error', sass.logError))
    .pipe(cleanCSS())
    .pipe(rename({ suffix: '.min' }))
    .pipe(gulp.dest(paths.styles.dest))
    .pipe(browserSync.stream());
}

// === –ö–û–ü–Ü–Æ–í–ê–ù–ù–Ø app.js –ë–ï–ó –ú–Ü–ù–Ü–ú–Ü–ó–ê–¶–Ü–á ===
function jsApp() {
  console.log('\x1b[33m%s\x1b[0m', 'üß© jsApp –∫–æ–ø—ñ—é—î—Ç—å—Å—è –±–µ–∑ –º—ñ–Ω—ñ–º—ñ–∑–∞—Ü—ñ—ó...');
  return gulp.src(paths.scripts.app)
    .pipe(gulp.dest(paths.scripts.appDest))
    .pipe(browserSync.stream());
}

// === –ú–Ü–ù–Ü–ú–Ü–ó–ê–¶–Ü–Ø functions/*.js ===
function jsFunctions() {
  console.log('\x1b[32m%s\x1b[0m', '‚öôÔ∏è jsFunctions –º—ñ–Ω—ñ–º—ñ–∑—É—î—Ç—å—Å—è...');
  return gulp.src(paths.scripts.functions)
    .pipe(plumber())
    .pipe(uglify())
    .pipe(gulp.dest(paths.scripts.functionsDest))
    .pipe(browserSync.stream());
}

// === –°–ü–û–°–¢–ï–†–ï–ñ–ï–ù–ù–Ø –ó–ê –ó–ú–Ü–ù–ê–ú–ò + BROWSERSYNC ===
function watch() {
  browserSync.init({
    server: {
      baseDir: './dist'
    }
  });

  gulp.watch(paths.html.src, html);
  gulp.watch('src/partials/*.html', html);
  gulp.watch(paths.styles.src, styles);
  gulp.watch(paths.scripts.app, jsApp);
  gulp.watch(paths.scripts.functions, jsFunctions);
  console.log('\x1b[44m%s\x1b[0m', 'üëÄ Gulp —Å–ª—ñ–¥–∫—É—î –∑–∞ —Ñ–∞–π–ª–∞–º–∏...');
}

// === –ï–ö–°–ü–û–†–¢ –ó–ê–î–ê–ß ===
exports.default = gulp.series(
  gulp.parallel(html, styles, jsApp, jsFunctions),
  watch
);
